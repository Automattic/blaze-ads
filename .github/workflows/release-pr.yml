name: "Release - Prepare a release PR to trunk"

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'The release version (e.g. 0.5.0)'
        required: true
        type: string
      releaseDateString:
        description: "The release date in human-readable format (default: 'today')."
        required: false
        default: "today"
        type: string

permissions:
  contents: read   # Required for repository access
  actions: write   # Required to allow the `release-build-zip.yml` workflow to upload artifacts

defaults:
  run:
    shell: bash

jobs:
  prepare-release:
    name: "Prepare a stable release"
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.create_branch.outputs.branch-name }}
      release-pr-id: ${{ steps.create-pr-to-trunk.outputs.RELEASE_PR_ID }}
    env:
      RELEASE_VERSION: ${{ inputs.releaseVersion }}
      RELEASE_DATE_STRING: ${{ inputs.releaseDateString }}

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3

      - name: "Set up repository"
        uses: ./.github/actions/setup-repo

      - name: "Install dependencies"
        run: |
          pnpm install

      - name: "Create a release branch"
        id: create_branch
        uses: ./.github/actions/create-branch
        with:
          version: ${{ env.RELEASE_VERSION }}

      - name: "Define the release date"
        id: define_var
        run: |
          RELEASE_DATE=$( date "+%Y-%m-%d" -d "$RELEASE_DATE_STRING" ) # Release date formatted as YYYY-MM-DD
          echo "RELEASE_DATE=$RELEASE_DATE" >> $GITHUB_OUTPUT

      - name: "Generate the changelog"
        id: generate_changelog
        uses: ./.github/actions/process-changelog
        with:
          release-version: ${{ steps.create_branch.outputs.trimmed-version }}
          release-date: ${{ steps.define_var.outputs.RELEASE_DATE }}

      - name: "Bump version"
        env:
          RELEASE_VERSION: ${{ steps.create_branch.outputs.trimmed-version }}
          RELEASE_DATE: ${{ steps.define_var.outputs.RELEASE_DATE }}
          CHANGELOG: ${{ steps.generate_changelog.outputs.changelog }}
        run: |
          CURRENT_VERSION=$(jq '.version' package.json -r)

          # 'Version' header in blaze-ads.php
          sed -i "s/^ \* Version: .*$/ * Version: $RELEASE_VERSION/" blaze-ads.php

          # 'version' field in package.json and package-lock.json
          pnpm version $RELEASE_VERSION --no-git-tag-version

          # 'Stable tag' header in readme.txt;
          sed -i "s/^Stable tag: .*$/Stable tag: $RELEASE_VERSION/" readme.txt          

      - name: "Commit and push changes"
        env:
          RELEASE_VERSION: ${{ steps.create_branch.outputs.trimmed-version }}
          BRANCH_NAME: ${{ steps.create_branch.outputs.branch-name }}
        uses: ./.github/actions/commit-push-as-bot
        with:
          release-version: ${{ env.RELEASE_VERSION }}
          branch: ${{ env.BRANCH_NAME }}

      - name: "Create a PR to trunk"
        id: create-pr-to-trunk
        env:
          GITHUB_TOKEN: ${{ secrets.BOTWOO_TOKEN }}
          BRANCH_NAME: ${{ steps.create_branch.outputs.branch-name }}
          CHANGELOG: ${{ steps.generate_changelog.outputs.changelog }}
          RELEASE_VERSION: ${{ steps.create_branch.outputs.trimmed-version }}
        run: |
          PR_BODY=$(echo -e ":warning: Please complete these checks before finishing the release. :warning:\n\n- [ ] The plugin version is bumped (\`package.json\` and \`blaze-ads.php\`)\n- [ ] The \`changelog.txt\` file is correct, and the entries from \`/changelog\` folder were deleted\n- [ ] CI checks are passing\n- [ ] Smoke test the plugin using the generated zip file (found in a comment below)\n\nAll good âœ… ? Then, feel free to merge this PR and, after that, execute the [Release - Tag and release trunk](https://github.com/Automattic/blaze-ads/actions/workflows/release-generate.yml) to finish the GitHub release.\n#### Changelog:\n\`\`\`\n${CHANGELOG}\n\`\`\`")
          PR_URL=$(gh pr create --title "Release branch for $RELEASE_VERSION" --body="$PR_BODY" --base="trunk")
          PR_ID=${PR_URL##*/}
          if [[ $PR_ID =~ ^[0-9]+$ ]]; then
            echo "RELEASE_PR_ID=$PR_ID" >> $GITHUB_OUTPUT
          fi

      - name: Add comment to PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_PR_ID: ${{ steps.create-pr-to-trunk.outputs.RELEASE_PR_ID }}
        run: |
          gh pr comment https://github.com/Automattic/blaze-ads/pull/$RELEASE_PR_ID --body="#### Release zip build

          Check status of zip file build at https://github.com/Automattic/blaze-ads/actions/runs/${GITHUB_RUN_ID}." 

  build-zip-and-run-smoke-tests:
    name: "Build release zip file"
    needs: prepare-release
    uses: ./.github/workflows/release-build-zip.yml
    with:
      repo-branch: ${{ needs.prepare-release.outputs.branch }}
    secrets: inherit
